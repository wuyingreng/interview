// 以下是一个使用 Node.js 实现包含前后端登录功能的示例，包含表单、会话、Cookie、Token 和用户验证

// 后端部分（使用 Express 框架）
// 安装依赖：npm install express body-parser cookie-parser jsonwebtoken bcryptjs express-session
const express = require('express');
const bodyParser = require('body-parser');
const cookieParser = require('cookie-parser');
const jwt = require('jsonwebtoken');
const bcrypt = require('bcryptjs');
const session = require('express-session');

const app = express();
const PORT = 3000;

// 模拟用户数据库
const users = [
  {
    id: 1,
    username: 'admin',
    password: bcrypt.hashSync('password', 10)
  }
];

// 中间件
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(cookieParser());
app.use(session({
  secret: 'your-secret-key',
  resave: false,
  saveUninitialized: true
}));

// 静态文件服务
app.use(express.static('public'));

// 登录页面
app.get('/login', (req, res) => {
  res.sendFile(__dirname + '/public/login.html');
});

// 登录处理
app.post('/login', (req, res) => {
  const { username, password } = req.body;
  const user = users.find(u => u.username === username);

  if (user && bcrypt.compareSync(password, user.password)) {
    // 生成 JWT
    const token = jwt.sign({ userId: user.id }, 'your-jwt-secret', { expiresIn: '1h' });
    // 设置会话
    req.session.userId = user.id;
    // 设置 Cookie
    res.cookie('token', token, { httpOnly: true });
    res.redirect('/dashboard');
  } else {
    res.status(401).send('Invalid username or password');
  }
});

// 仪表盘（受保护的路由）
app.get('/dashboard', (req, res) => {
  if (req.session.userId) {
    res.send('Welcome to the dashboard!');
  } else {
    res.redirect('/login');
  }
});

// 登出
app.get('/logout', (req, res) => {
  req.session.destroy();
  res.clearCookie('token');
  res.redirect('/login');
});

// 启动服务器
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

// 前端部分
// 在项目根目录下创建一个 public 文件夹，并在其中创建 login.html 文件
// public/login.html
/*
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login Page</title>
</head>
<body>
  <h1>Login</h1>
  <form action="/login" method="post">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br>
    <button type="submit">Login</button>
  </form>
</body>
</html>
*/
